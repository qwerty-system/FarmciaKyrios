<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>